CREATE TYPE "public"."agent_status" AS ENUM('idle', 'starting', 'running', 'stopping', 'stopped', 'error', 'paused');--> statement-breakpoint
CREATE TYPE "public"."agent_type" AS ENUM('orchestrator', 'explorer', 'analyzer', 'extractor', 'validator');--> statement-breakpoint
CREATE TYPE "public"."job_priority" AS ENUM('low', 'normal', 'high', 'critical');--> statement-breakpoint
CREATE TYPE "public"."job_status" AS ENUM('pending', 'running', 'completed', 'failed', 'cancelled', 'retrying');--> statement-breakpoint
CREATE TABLE "agent_jobs" (
	"id" uuid PRIMARY KEY NOT NULL,
	"agent_id" varchar(100) NOT NULL,
	"agent_type" "agent_type" NOT NULL,
	"job_type" varchar(100) NOT NULL,
	"status" "job_status" DEFAULT 'pending' NOT NULL,
	"priority" "job_priority" DEFAULT 'normal' NOT NULL,
	"payload" jsonb NOT NULL,
	"result" jsonb,
	"error_message" text,
	"retry_count" integer DEFAULT 0 NOT NULL,
	"max_retries" integer DEFAULT 3 NOT NULL,
	"scheduled_at" timestamp DEFAULT now() NOT NULL,
	"started_at" timestamp,
	"completed_at" timestamp,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "agent_memory" (
	"id" uuid PRIMARY KEY NOT NULL,
	"agent_id" varchar(100) NOT NULL,
	"agent_type" "agent_type" NOT NULL,
	"key" varchar(200) NOT NULL,
	"value" jsonb NOT NULL,
	"tags" jsonb,
	"expires_at" timestamp,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "agent_messages" (
	"id" uuid PRIMARY KEY NOT NULL,
	"from_agent_id" varchar(100) NOT NULL,
	"to_agent_id" varchar(100),
	"message_type" varchar(100) NOT NULL,
	"topic" varchar(200),
	"payload" jsonb NOT NULL,
	"priority" "job_priority" DEFAULT 'normal' NOT NULL,
	"processed" boolean DEFAULT false NOT NULL,
	"processed_at" timestamp,
	"expires_at" timestamp,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "agent_metrics" (
	"id" uuid PRIMARY KEY NOT NULL,
	"agent_id" varchar(100) NOT NULL,
	"agent_type" "agent_type" NOT NULL,
	"metric_name" varchar(100) NOT NULL,
	"metric_value" numeric(10, 4) NOT NULL,
	"metric_unit" varchar(50),
	"metadata" jsonb,
	"recorded_at" timestamp DEFAULT now() NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "agent_orchestrations" (
	"id" uuid PRIMARY KEY NOT NULL,
	"orchestrator_id" varchar(100) NOT NULL,
	"workflow_name" varchar(100) NOT NULL,
	"status" "job_status" DEFAULT 'pending' NOT NULL,
	"config" jsonb NOT NULL,
	"progress" jsonb,
	"result" jsonb,
	"error_message" text,
	"started_at" timestamp,
	"completed_at" timestamp,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "brands" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "brands_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(100) NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL,
	CONSTRAINT "brands_name_unique" UNIQUE("name")
);
--> statement-breakpoint
CREATE TABLE "images" (
	"id" uuid PRIMARY KEY NOT NULL,
	"vehicle_id" uuid NOT NULL,
	"image_url" text NOT NULL,
	"image_order" integer DEFAULT 0,
	"image_type" varchar(50) DEFAULT 'exterior',
	"is_primary" boolean DEFAULT false,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "models" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "models_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(100) NOT NULL,
	"brand_id" integer NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "vehicles" (
	"id" uuid PRIMARY KEY NOT NULL,
	"title" text NOT NULL,
	"description" text,
	"price" numeric(12, 2),
	"currency" varchar(10) DEFAULT 'USD',
	"year" integer,
	"mileage" integer,
	"engine_size" numeric(4, 2),
	"horsepower" integer,
	"brand_id" integer,
	"model_id" integer,
	"color" varchar(50),
	"condition" varchar(50),
	"location_city" varchar(100),
	"location_state" varchar(100),
	"location_country" varchar(100),
	"vin" varchar(50),
	"license_plate" varchar(20),
	"seller_name" varchar(200),
	"seller_phone" varchar(50),
	"seller_email" varchar(200),
	"source_url" text NOT NULL,
	"source_portal" varchar(100) NOT NULL,
	"ai_analysis_summary" text,
	"is_opportunity_ai" boolean DEFAULT false,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
ALTER TABLE "images" ADD CONSTRAINT "images_vehicle_id_vehicles_id_fk" FOREIGN KEY ("vehicle_id") REFERENCES "public"."vehicles"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "models" ADD CONSTRAINT "models_brand_id_brands_id_fk" FOREIGN KEY ("brand_id") REFERENCES "public"."brands"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "vehicles" ADD CONSTRAINT "vehicles_brand_id_brands_id_fk" FOREIGN KEY ("brand_id") REFERENCES "public"."brands"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "vehicles" ADD CONSTRAINT "vehicles_model_id_models_id_fk" FOREIGN KEY ("model_id") REFERENCES "public"."models"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "agent_jobs_agent_idx" ON "agent_jobs" USING btree ("agent_id");--> statement-breakpoint
CREATE INDEX "agent_jobs_status_idx" ON "agent_jobs" USING btree ("status");--> statement-breakpoint
CREATE INDEX "agent_jobs_priority_idx" ON "agent_jobs" USING btree ("priority");--> statement-breakpoint
CREATE INDEX "agent_jobs_scheduled_idx" ON "agent_jobs" USING btree ("scheduled_at");--> statement-breakpoint
CREATE INDEX "agent_jobs_created_at_idx" ON "agent_jobs" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "agent_memory_agent_key_idx" ON "agent_memory" USING btree ("agent_id","key");--> statement-breakpoint
CREATE INDEX "agent_memory_expires_idx" ON "agent_memory" USING btree ("expires_at");--> statement-breakpoint
CREATE INDEX "agent_memory_tags_idx" ON "agent_memory" USING btree ("tags");--> statement-breakpoint
CREATE INDEX "agent_messages_to_agent_idx" ON "agent_messages" USING btree ("to_agent_id");--> statement-breakpoint
CREATE INDEX "agent_messages_topic_idx" ON "agent_messages" USING btree ("topic");--> statement-breakpoint
CREATE INDEX "agent_messages_processed_idx" ON "agent_messages" USING btree ("processed");--> statement-breakpoint
CREATE INDEX "agent_messages_created_at_idx" ON "agent_messages" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "agent_metrics_agent_metric_idx" ON "agent_metrics" USING btree ("agent_id","metric_name");--> statement-breakpoint
CREATE INDEX "agent_metrics_recorded_idx" ON "agent_metrics" USING btree ("recorded_at");--> statement-breakpoint
CREATE INDEX "agent_orchestrations_orchestrator_idx" ON "agent_orchestrations" USING btree ("orchestrator_id");--> statement-breakpoint
CREATE INDEX "agent_orchestrations_workflow_idx" ON "agent_orchestrations" USING btree ("workflow_name");--> statement-breakpoint
CREATE INDEX "agent_orchestrations_status_idx" ON "agent_orchestrations" USING btree ("status");--> statement-breakpoint
CREATE INDEX "agent_orchestrations_created_at_idx" ON "agent_orchestrations" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "images_vehicle_idx" ON "images" USING btree ("vehicle_id");--> statement-breakpoint
CREATE INDEX "images_primary_idx" ON "images" USING btree ("is_primary");--> statement-breakpoint
CREATE INDEX "vehicles_price_idx" ON "vehicles" USING btree ("price");--> statement-breakpoint
CREATE INDEX "vehicles_year_idx" ON "vehicles" USING btree ("year");--> statement-breakpoint
CREATE INDEX "vehicles_brand_idx" ON "vehicles" USING btree ("brand_id");--> statement-breakpoint
CREATE INDEX "vehicles_source_idx" ON "vehicles" USING btree ("source_portal");--> statement-breakpoint
CREATE INDEX "vehicles_created_at_idx" ON "vehicles" USING btree ("created_at");